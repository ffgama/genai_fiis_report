import streamlit as st
from langchain_openai import ChatOpenAI
from langchain_groq import ChatGroq
from components.utils import load_pdf_document

def sidebar_area():
    EXT_TYPE_FILES = ["PDF", "CSV", "URL"]

    MODEL_PARAMS = {
        'OpenAI': {'modelos': ['gpt-4o-mini', 'gpt-4o'], 'chat': ChatOpenAI},
        'Groq': {'modelos': ['llama-3.3-70b-versatile', 'gemma2-9b-it', 'qwen/qwen3-32b'], 'chat': ChatGroq}
    }

    tabs = st.tabs(["üè† In√≠cio", "‚ö†Ô∏è Disclaimer"])

    with tabs[0]:
        file_type = st.selectbox("Tipo de arquivo", EXT_TYPE_FILES)
        if file_type == "PDF":
            pdf_file = st.file_uploader("Carregue um arquivo PDF", type=['.pdf'])

            if pdf_file is not None:
                st.success("Arquivo carregado com sucesso ‚úÖ")
                document = load_pdf_document(pdf_file)
                st.session_state['document'] = document

        elif file_type == "CSV":
            st.error(f"Carregamento de {file_type} ainda n√£o implementado")
        elif file_type == "URL":
            st.error(f"Carregamento de {file_type} ainda n√£o implementado")

        provider = st.selectbox("Selecione o provedor",
                                MODEL_PARAMS.keys())
        model = st.selectbox("Selecione o modelo",
                             MODEL_PARAMS[provider]['modelos'])
        api_key = st.text_input("Informe a chave da API",
                                type="password",
                                value=st.session_state.get(f'api_key_{provider}'))

        st.session_state[f'api_key_{provider}'] = api_key

        if st.button("Confirmar", use_container_width=True):
            if not api_key:
                st.error("Chave de API √© obrigat√≥ria")
                st.stop()

            try:
                chat = MODEL_PARAMS[provider]['chat'](model=model, api_key=api_key)
                chat.invoke("Ol√°, IA!")

            except Exception:
                st.error("Chave inv√°lida ou problemas de conex√£o com o modelo.")
                url = "https://platform.openai.com/account/api-keys"
                st.info(f"Voc√™ pode verificar sua chave de API atrav√©s da url: {url}")
                st.stop()

            st.session_state['chat'] = chat
            st.success("IA dispon√≠vel para uso ‚úÖ")

    with tabs[1]:
        st.warning(""" üëâ As informa√ß√µes fornecidas neste aplicativo s√£o apenas
                   para fins educacionais e n√£o representam recomenda√ß√£o
                   de investimento.""")
        st.warning(""" üëâ Uma inteligencia artificial pode gerar respostas
                   incorretas ou imprecisas. Sempre verifique as
                   informa√ß√µes obtidas com fontes confi√°veis antes de tomar
                   decis√µes de investimento.""")
